@model SearchGameViewModel

@{
    if(Model.CurrentlyPlayingPlayers == null) {
        Model.CurrentlyPlayingPlayers = new List<PlayerViewModel>();
    }
    if(Model.QueuedPlayers == null) {
        Model.QueuedPlayers = new List<PlayerViewModel>();
    }
}

<div id="TeamQueueListDiv" class="col-md-12">

    <div id="CurrentlyPlayingPlayersListDiv" class="row">
        <span>Currently playing:</span>
        <input id="SeachGameCurrentPlayerId" asp-for="CurrentPlayerId" type="hidden"/>
        <button id="SearchGameJoinGameQueue" class="btn btn-primary pull-right">Join game queue</button>
        <hr>
        <div class="col-md-6">
            <ol class="" id="currentPlayersList">
                @foreach(var player in Model.CurrentlyPlayingPlayers) {
                    <li class="">@player.Name (score: @player.Score)</li>
                }
            </ol>
        </div>
        <div class="col-md-6">
            <label>@Model?.CurrentGameTimeLeft?.Label</label>
            <p id="currentGameTimeLeft">@Model?.CurrentGameTimeLeft?.SecondsLeft</p>
        </div>
    </div>

    <div id="QueuedPlayersListDiv" class="row">
        <span>Players queued:</span>
        <hr>
        <div class="col-md-6">
            <ol class="" id="queuedPlayersList">
                @foreach(var player in Model.QueuedPlayers) {
                    if(player.IsCurrent) {
                        <li class="">@player.Name @player.Surname (score: @player.Score)</li>
                    } else {
                        <li class="list-group-item-info">@player.Name @player.Surname (score: @player.Score)</li>
                    }
                }
            </ol>
        </div>
        <div class="col-md-6">
            <label>@Model?.EstimatedGameTimeLeft?.Label</label>
            <p id="estimatedGameTimeLeft">@Model?.EstimatedGameTimeLeft?.SecondsLeft</p>
        </div>
    </div>
</div>